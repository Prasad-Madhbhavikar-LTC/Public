 
kafka_config = {'bootstrap.servers': 'localhost:9092'}
topic Name = 'processing_progress_events_topic'





=========== Sample events are as below   ===============

{"meta": {"source": "Kafka", "creation_time": 1716542892, "received_time": 1716542892}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 0, "description": "csv at NativeMethodAccessorImpl.java:0", "details": "org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)", "physicalPlanDescription": "== Physical Plan ==\nCollectLimit (3)\n+- * Filter (2)\n   +- Scan text  (1)\n\n\n(1) Scan text \nOutput [1]: [value#0]\nBatched: false\nLocation: InMemoryFileIndex [file:/mnt/c/Users/MadhbhavikarPrasad(D/Development/data_migrator_public/merged_customer_data.csv]\nReadSchema: struct<value:string>\n\n(2) Filter [codegen id : 1]\nInput [1]: [value#0]\nCondition : (length(trim(value#0, None)) > 0)\n\n(3) CollectLimit\nInput [1]: [value#0]\nArguments: 1\n\n", "time": 1716542892383}}}
{"meta": {"source": "Kafka", "creation_time": 1716542892, "received_time": 1716542892}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 0}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "jobStart", "event_data": {"jobId": 0, "time": 1716542892939}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "stageSubmitted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "taskStart", "event_data": {"stageId": 0, "stageAttemptId": 0}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "taskEnd", "event_data": {"stageId": 0, "stageAttemptId": 0, "taskType": "ResultTask"}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "stageCompleted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "jobEnd", "event_data": {"jobId": 0, "time": 1716542893286}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 0, "time": 1716542893310, "duration": 1203948068}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "jobStart", "event_data": {"jobId": 1, "time": 1716542893463}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "stageSubmitted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "taskStart", "event_data": {"stageId": 1, "stageAttemptId": 0}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "taskEnd", "event_data": {"stageId": 1, "stageAttemptId": 0, "taskType": "ResultTask"}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "stageCompleted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "jobEnd", "event_data": {"jobId": 1, "time": 1716542893785}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 1, "description": "collect at /home/prasad/Development/data_migrator_public/JVMPhadu.py:23", "details": "org.apache.spark.sql.Dataset.collectToPython(Dataset.scala:4157)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)", "physicalPlanDescription": "== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- BroadcastNestedLoopJoin Cross BuildRight (4)\n   :- Scan csv  (1)\n   +- BroadcastExchange (3)\n      +- Scan csv  (2)\n\n\n(1) Scan csv \nOutput [8]: [first_name#17, last_name#18, email#19, gender#20, dob#21, phone#22, account_number#23, balance#24]\nBatched: false\nLocation: InMemoryFileIndex [file:/mnt/c/Users/MadhbhavikarPrasad(D/Development/data_migrator_public/merged_customer_data.csv]\nReadSchema: struct<first_name:string,last_name:string,email:string,gender:string,dob:string,phone:string,account_number:string,balance:double>\n\n(2) Scan csv \nOutput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nBatched: false\nLocation: InMemoryFileIndex [file:/mnt/c/Users/MadhbhavikarPrasad(D/Development/data_migrator_public/merged_customer_data.csv]\nReadSchema: struct<first_name:string,last_name:string,email:string,gender:string,dob:string,phone:string,account_number:string,balance:double>\n\n(3) BroadcastExchange\nInput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: IdentityBroadcastMode, [plan_id=31]\n\n(4) BroadcastNestedLoopJoin\nJoin type: Cross\nJoin condition: None\n\n(5) AdaptiveSparkPlan\nOutput [16]: [first_name#17, last_name#18, email#19, gender#20, dob#21, phone#22, account_number#23, balance#24, first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: isFinalPlan=false\n\n", "time": 1716542893910}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 1, "physicalPlanDescription": "== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- == Current Plan ==\n   BroadcastNestedLoopJoin Cross BuildRight (5)\n   :- Scan csv  (1)\n   +- BroadcastQueryStage (4)\n      +- BroadcastExchange (3)\n         +- Scan csv  (2)\n+- == Initial Plan ==\n   BroadcastNestedLoopJoin Cross BuildRight (6)\n   :- Scan csv  (1)\n   +- BroadcastExchange (3)\n      +- Scan csv  (2)\n\n\n(1) Scan csv \nOutput [8]: [first_name#17, last_name#18, email#19, gender#20, dob#21, phone#22, account_number#23, balance#24]\nBatched: false\nLocation: InMemoryFileIndex [file:/mnt/c/Users/MadhbhavikarPrasad(D/Development/data_migrator_public/merged_customer_data.csv]\nReadSchema: struct<first_name:string,last_name:string,email:string,gender:string,dob:string,phone:string,account_number:string,balance:double>\n\n(2) Scan csv \nOutput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nBatched: false\nLocation: InMemoryFileIndex [file:/mnt/c/Users/MadhbhavikarPrasad(D/Development/data_migrator_public/merged_customer_data.csv]\nReadSchema: struct<first_name:string,last_name:string,email:string,gender:string,dob:string,phone:string,account_number:string,balance:double>\n\n(3) BroadcastExchange\nInput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: IdentityBroadcastMode, [plan_id=31]\n\n(4) BroadcastQueryStage\nOutput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: 0\n\n(5) BroadcastNestedLoopJoin\nJoin type: Cross\nJoin condition: None\n\n(6) BroadcastNestedLoopJoin\nJoin type: Cross\nJoin condition: None\n\n(7) AdaptiveSparkPlan\nOutput [16]: [first_name#17, last_name#18, email#19, gender#20, dob#21, phone#22, account_number#23, balance#24, first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: isFinalPlan=false\n\n"}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 1}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "jobStart", "event_data": {"jobId": 2, "time": 1716542893982}}}
{"meta": {"source": "Kafka", "creation_time": 1716542893, "received_time": 1716542893}, "data": {"event_name": "stageSubmitted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "taskStart", "event_data": {"stageId": 2, "stageAttemptId": 0}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "taskEnd", "event_data": {"stageId": 2, "stageAttemptId": 0, "taskType": "ResultTask"}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "stageCompleted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "jobEnd", "event_data": {"jobId": 2, "time": 1716542894111}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 1}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 1, "physicalPlanDescription": "== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- == Final Plan ==\n   * BroadcastNestedLoopJoin Cross BuildRight (5)\n   :- Scan csv  (1)\n   +- BroadcastQueryStage (4), Statistics(sizeInBytes=26.6 KiB, rowCount=163)\n      +- BroadcastExchange (3)\n         +- Scan csv  (2)\n+- == Initial Plan ==\n   BroadcastNestedLoopJoin Cross BuildRight (6)\n   :- Scan csv  (1)\n   +- BroadcastExchange (3)\n      +- Scan csv  (2)\n\n\n(1) Scan csv \nOutput [8]: [first_name#17, last_name#18, email#19, gender#20, dob#21, phone#22, account_number#23, balance#24]\nBatched: false\nLocation: InMemoryFileIndex [file:/mnt/c/Users/MadhbhavikarPrasad(D/Development/data_migrator_public/merged_customer_data.csv]\nReadSchema: struct<first_name:string,last_name:string,email:string,gender:string,dob:string,phone:string,account_number:string,balance:double>\n\n(2) Scan csv \nOutput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nBatched: false\nLocation: InMemoryFileIndex [file:/mnt/c/Users/MadhbhavikarPrasad(D/Development/data_migrator_public/merged_customer_data.csv]\nReadSchema: struct<first_name:string,last_name:string,email:string,gender:string,dob:string,phone:string,account_number:string,balance:double>\n\n(3) BroadcastExchange\nInput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: IdentityBroadcastMode, [plan_id=31]\n\n(4) BroadcastQueryStage\nOutput [8]: [first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: 0\n\n(5) BroadcastNestedLoopJoin [codegen id : 1]\nJoin type: Cross\nJoin condition: None\n\n(6) BroadcastNestedLoopJoin\nJoin type: Cross\nJoin condition: None\n\n(7) AdaptiveSparkPlan\nOutput [16]: [first_name#17, last_name#18, email#19, gender#20, dob#21, phone#22, account_number#23, balance#24, first_name#33, last_name#34, email#35, gender#36, dob#37, phone#38, account_number#39, balance#40]\nArguments: isFinalPlan=true\n\n"}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 1}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "jobStart", "event_data": {"jobId": 3, "time": 1716542894267}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "stageSubmitted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "taskStart", "event_data": {"stageId": 3, "stageAttemptId": 0}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "taskGettingResult", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "taskEnd", "event_data": {"stageId": 3, "stageAttemptId": 0, "taskType": "ResultTask"}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "stageCompleted", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "jobEnd", "event_data": {"jobId": 3, "time": 1716542894534}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "otherEvent", "event_data": {"executionId": 1, "time": 1716542894558, "duration": 710729279}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}
{"meta": {"source": "Kafka", "creation_time": 1716542894, "received_time": 1716542894}, "data": {"event_name": "blockUpdated", "event_data": {}}}